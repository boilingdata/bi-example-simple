type: compaction
compactDataSqlTmpl: >
  COPY (
    SELECT * FROM parquet_scan('{{{sourcePrefix}}}/**/*.parquet', hive_partitioning = true)
    ORDER BY time_us DESC
  ) TO '{{{targetPrefix}}}/jetstream.parquet' WITH ( FORMAT 'Parquet', COMPRESSION 'ZSTD' );
compactMetadataSqlTmpl: >
  COPY (
    SELECT *
    FROM read_json('{{{sourcePrefix}}}/**/keys.json',
      columns = { Bucket: 'VARCHAR', year: 'VARCHAR', month: 'VARCHAR', day: 'VARCHAR', hour: 'VARCHAR', Key: 'VARCHAR', LastModified: 'TIMESTAMP', ETag: 'VARCHAR', Size: 'UBIGINT', StorageClass: 'VARCHAR' },
      format = 'newline_delimited', hive_partitioning = false
    )
    ORDER BY Bucket, year, month, day, hour, Key
  ) TO '{{{targetPrefix}}}/keys.parquet' WITH ( FORMAT 'Parquet', COMPRESSION
  'ZSTD' );
